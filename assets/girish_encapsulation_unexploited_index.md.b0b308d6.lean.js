import{_ as t,C as p,o as r,c as i,k as s,a,H as n,w as l,Q as o}from"./chunks/framework.1ff90abd.js";const x=JSON.parse('{"title":"Unexploited Encapsulation","description":"","frontmatter":{},"headers":[],"relativePath":"girish/encapsulation/unexploited/index.md","filePath":"girish/encapsulation/unexploited/index.md"}'),c={name:"girish/encapsulation/unexploited/index.md"},d=s("h1",{id:"unexploited-encapsulation",tabindex:"-1"},[a("Unexploited Encapsulation "),s("a",{class:"header-anchor",href:"#unexploited-encapsulation","aria-label":'Permalink to "Unexploited Encapsulation"'},"â€‹")],-1),u=s("div",{class:"video-wrapper"},[s("iframe",{width:"560",height:"315",src:"https://www.youtube.com/embed/qQC5cXVuX9Y",title:"YouTube video player",frameborder:"0",allow:"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture",allowfullscreen:""})],-1),h=o("",5),y=o("",9),E=s("code",null,"square",-1),g=s("code",null,"triangle",-1),k=s("code",null,"charNeeded",-1),m=s("code",null,"print",-1),b=s("code",null,"Shape",-1),_=o("",6),f=s("p",null,[a("Harusnya Anda menyadari bahwa terjadi violasi OCP disini. Bila class "),s("code",null,"Circle"),a(" dibuat, maka if di Factory bertambah. Hal ini dimaklumi karena OCP hanya dilanggar satu kali saja di dalam Factory (tidak akan dilanggar lagi di tempat lain) dan memang terpaksa dilakukan karena input dari user adalah string. Ibaratkan Factory disini berperan sebagai anti-corruption layer.")],-1),C=s("p",null,[a("Di beberapa bahasa pemrograman, ada cara spesifik untuk mengakali menghilangkan if-else pada class Factory, contohnya untuk Java: "),s("a",{href:"https://www.javacodegeeks.com/2014/10/factory-without-if-else.html",target:"_blank",rel:"noreferrer"},"https://www.javacodegeeks.com/2014/10/factory-without-if-else.html"),a(".")],-1);function q(F,v,S,w,P,j){const e=p("github-url");return r(),i("div",null,[d,u,h,s("p",null,[a("Lihat class "),n(e,{to:"before/ShapePrinter.java"},{default:l(()=>[a("ShapePrinter.java")]),_:1}),a(" dan "),n(e,{to:"before/CharNeededCounter.java"},{default:l(()=>[a("CharNeededCounter.java.")]),_:1})]),y,s("p",null,[a("Kita memiliki dua type code. "),E,a(" dan "),g,a(". Oleh karena itu, kita buat class "),n(e,{to:"after/Square.java"},{default:l(()=>[a("Square")]),_:1}),a(", "),n(e,{to:"after/Shape.java"},{default:l(()=>[a("Shape")]),_:1}),a(" sebagai abstract class yang memiliki fungsi "),k,a(" dan "),m,a(", lalu "),n(e,{to:"after/Triangle.java"},{default:l(()=>[a("Triangle.java")]),_:1}),a(" dan "),n(e,{to:"after/Square.java"},{default:l(()=>[a("Square.java")]),_:1}),a(" meng-extends class "),b,a(".")]),_,s("p",null,[a("User tetap akan meng-input string melalui console. Oleh karena itu, kita perlu menyiapkan sebuah class "),n(e,{to:"after/ShapeFactory"},{default:l(()=>[a("Factory")]),_:1}),a(" untuk membuat class Shape dari string yang diinput.")]),f,C])}const A=t(c,[["render",q]]);export{x as __pageData,A as default};
